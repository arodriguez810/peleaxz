{"version":3,"sources":["../source/readXlsxFileBrowser.js"],"names":["unpackXlsxFile","xml","readXlsxFileContents","readXlsxFile","file","options","then","entries"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA;;;;;;;AAOA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACxD,SAAOL,eAAeI,IAAf,EACLE,IADK,CACA,UAACC,OAAD;AAAA,WAAaL,qBAAqBK,OAArB,EAA8BN,GAA9B,EAAmCI,OAAnC,CAAb;AAAA,GADA,CAAP;AAEA","file":"readXlsxFileBrowser.js","sourcesContent":["import unpackXlsxFile from './unpackXlsxFileBrowser'\r\nimport xml from './xmlBrowser'\r\nimport readXlsxFileContents from './readXlsxFileContents'\r\n\r\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\r\nexport default function readXlsxFile(file, options = {}) {\r\n\treturn unpackXlsxFile(file)\r\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\r\n}"]}