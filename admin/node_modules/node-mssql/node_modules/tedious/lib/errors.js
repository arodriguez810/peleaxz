// Generated by CoffeeScript 1.10.0
var ConnectionError,
    RequestError,
    extend = function (child, parent) {
  for (var key in parent) {
    if (hasProp.call(parent, key)) child[key] = parent[key];
  }function ctor() {
    this.constructor = child;
  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;
},
    hasProp = ({}).hasOwnProperty;

ConnectionError = (function (superClass) {
  extend(ConnectionError, superClass);

  function ConnectionError(message, code) {
    var err;
    if (!(this instanceof ConnectionError)) {
      if (message instanceof ConnectionError) {
        return message;
      }
      err = new ConnectionError(message, code);
      Error.captureStackTrace(err, arguments.callee);
      return err;
    }
    this.name = this.constructor.name;
    this.message = message;
    this.code = code;
    ConnectionError.__super__.constructor.call(this);
    Error.captureStackTrace(this, this.constructor);
  }

  return ConnectionError;
})(Error);

RequestError = (function (superClass) {
  extend(RequestError, superClass);

  function RequestError(message, code) {
    var err;
    if (!(this instanceof RequestError)) {
      if (message instanceof RequestError) {
        return message;
      }
      err = new RequestError(message, code);
      Error.captureStackTrace(err, arguments.callee);
      return err;
    }
    this.name = this.constructor.name;
    this.message = message;
    this.code = code;
    RequestError.__super__.constructor.call(this);
    Error.captureStackTrace(this, this.constructor);
  }

  return RequestError;
})(Error);

module.exports = {
  ConnectionError: ConnectionError,
  RequestError: RequestError
};