var _regeneratorRuntime = require('babel-runtime/regenerator').default;

// Generated by CoffeeScript 1.10.0
var interfaceTypes, versions;

versions = require('../tds-versions').versionsByValue;

interfaceTypes = {
  0: 'SQL_DFLT',
  1: 'SQL_TSQL'
};

module.exports = _regeneratorRuntime.mark(function callee$0$0(parser) {
  var interfaceNumber, interfaceType, length, progName, progVersion, tdsVersion, tdsVersionNumber;
  return _regeneratorRuntime.wrap(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return parser.readUInt16LE();

      case 2:
        length = context$1$0.sent;
        context$1$0.next = 5;
        return parser.readUInt8();

      case 5:
        interfaceNumber = context$1$0.sent;

        interfaceType = interfaceTypes[interfaceNumber];
        context$1$0.next = 9;
        return parser.readUInt32BE();

      case 9:
        tdsVersionNumber = context$1$0.sent;

        tdsVersion = versions[tdsVersionNumber];
        return context$1$0.delegateYield(parser.readBVarChar(), 't0', 12);

      case 12:
        progName = context$1$0.t0;
        context$1$0.next = 15;
        return parser.readUInt8();

      case 15:
        context$1$0.t1 = context$1$0.sent;
        context$1$0.next = 18;
        return parser.readUInt8();

      case 18:
        context$1$0.t2 = context$1$0.sent;
        context$1$0.next = 21;
        return parser.readUInt8();

      case 21:
        context$1$0.t3 = context$1$0.sent;
        context$1$0.next = 24;
        return parser.readUInt8();

      case 24:
        context$1$0.t4 = context$1$0.sent;
        progVersion = {
          major: context$1$0.t1,
          minor: context$1$0.t2,
          buildNumHi: context$1$0.t3,
          buildNumLow: context$1$0.t4
        };
        return context$1$0.abrupt('return', {
          name: 'LOGINACK',
          event: 'loginack',
          "interface": interfaceType,
          tdsVersion: tdsVersion,
          progName: progName,
          progVersion: progVersion
        });

      case 27:
      case 'end':
        return context$1$0.stop();
    }
  }, callee$0$0, this);
});