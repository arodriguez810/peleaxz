var _regeneratorRuntime = require('babel-runtime/regenerator').default;

// Generated by CoffeeScript 1.10.0
var sprintf, valueParse;

valueParse = require('../value-parser');

sprintf = require('sprintf').sprintf;

module.exports = _regeneratorRuntime.mark(function callee$0$0(parser, columnsMetaData, options) {
  var column, columnMetaData, columns, i, len, value;
  return _regeneratorRuntime.wrap(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        columns = options.useColumnNames ? {} : [];
        i = 0, len = columnsMetaData.length;

      case 2:
        if (!(i < len)) {
          context$1$0.next = 11;
          break;
        }

        columnMetaData = columnsMetaData[i];
        return context$1$0.delegateYield(valueParse(parser, columnMetaData, options), 't0', 5);

      case 5:
        value = context$1$0.t0;

        column = {
          value: value,
          metadata: columnMetaData
        };
        if (options.useColumnNames) {
          if (columns[columnMetaData.colName] == null) {
            columns[columnMetaData.colName] = column;
          }
        } else {
          columns.push(column);
        }

      case 8:
        i++;
        context$1$0.next = 2;
        break;

      case 11:
        return context$1$0.abrupt('return', {
          name: 'ROW',
          event: 'row',
          columns: columns
        });

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, callee$0$0, this);
});