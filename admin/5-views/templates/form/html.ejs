<%
var name = name || "";
var options = {
    placeholder: params.capitalize(name),
    type: "text",
    icon: {
        class: "html5",
        position: "left",
        color: TAG.table+"-800"
    },
    helptext: '',
    readonly: false,
    disabled: false,
    autocomplete: '',
    posttype: "html"
    //maxlength: 10,

};
options = OBJECT.merge(options, opts); var nameclean = name.replace(/\./g,'_');
options.autocomplete = options.autocomplete ? "autocomplete='Off'" : '';
options.model = options.model ? options.model : false;
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    if(MESSAGE.exist('columns.<%= nameclean %>')){
        <%= model %>.form.options.<%= name %>.placeholder = MESSAGE.i('columns.<%= nameclean %>');
    }
</script>
<div class="form-group-material form-group has-feedback has-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}  has-feedback-{{<%= model %>.form.options.<%= name %>.icon.position}}"
     id="input<%= model %>_<%= nameclean %>">
    <label

            class="control-label is-visible animate">
        {{<%= model %>.form.options.<%= name %>.placeholder}}
    </label>
    <textarea
            ng-model="<%= model + "." + name %>" name="<%= model %>_<%= nameclean %>"
            ng-readonly="<%= model %>.form.options.<%= name %>.readonly"
            ng-disabled="<%= model %>.form.options.<%= name %>.disabled"
            ng-model-onblur
            maxlength="{{<%= model %>.form.options.<%= name %>.maxlength}}"
            type="{{<%= model %>.form.options.<%= name %>.type}}"
            <%= options.model ? "value='{{" + options.model + "}}'" : "" %>
            class="wysihtml5 form-control"
            placeholder="{{<%= model %>.form.options.<%= name %>.placeholder}}"></textarea>

    <div class="form-control-feedback">
        <i class="icon-{{<%= model %>.form.options.<%= name %>.icon.class}} text-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}">

        </i>
    </div>
    <span ng-if="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
        {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validate['<%= name %>'].messages.length>0" class="help-block">
       <p class="text-{{validation.type}}"
          ng-repeat="(key,validation) in <%= model %>.validate['<%= name %>'].messages track by key">
               <i class="{{validation.icon}}"></i> {{validation.message}}
        </p>
    </span>
</div>
<script>
    $(document).ready(function () {

        var isReadProgram = <%= model %>.form.isReadOnly('<%= name %>');
        if(isReadProgram!==false){
            <%= model %>.form.options.<%= name %>.disabled = true;
            if(isReadProgram!==undefined){
                <%= model %>.<%= name %> = isReadProgram;
                $('[name="<%= model %>_<%= nameclean %>"]').val(isReadProgram);
            }
        }

        $('[name="<%= model %>_<%= nameclean %>"]').summernote({
            callbacks: {
                onKeydown: function(e) {
                    <%= model %>.<%= name %> = $(this).val();
                }
            }
        });

        if(isReadProgram!==false){
            <%= model %>.form.options.<%= name %>.disabled = true;
            if(isReadProgram!==undefined){
                $('[name="<%= model %>_<%= nameclean %>"]').summernote('disable');
            }
        }



        $('[name="<%= model %>_<%= nameclean %>"]').on('summernote.change', function(we, contents, $editable) {

            STEP.register({
                    scope: "<%= model %>",
                    action: "Change HTML",
                    field: "<%= name %>"
            });
            <%= model %>.<%= name %> = $(this).val();
        });

        $(".link-dialog input[type=checkbox], .note-modal-form input[type=radio]").uniform({
            radioClass: 'choice'
        });
        $(".note-image-input").uniform({
            fileButtonClass: 'action btn bg-warning-400'
        });



    });
</script>