<%
var name = name || "";
var options = {
    placeholder: params.capitalize(name),
    type: "text",
    icon: {
        class: "none",
        position: "left",
        color: TAG.table+"-800"
    },
    helptext: '',
    format: '',
    readonly: false,
    disabled: false,
    autocomplete: '',
    posttype: "text",
    isNumber: false
    //maxlength: 10,

};
options = OBJECT.merge(options, opts);
options.autocomplete = options.autocomplete ? "autocomplete='Off'" : '';
options.format = options.format ? options.format : false;
options.model = options.model ? options.model : false;
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    <% if(options.format || options.isNumber){ %>
    <%= model %>.form.registerField("<%= name %>_DragonClean", "<%= toclient %>");
    <% } %>
if(ICON.classes.<%=  name.toLowerCase() %>!==undefined){
    if( <%= model %>.form.options.<%= name %>.icon.class==='none')
    <%= model %>.form.options.<%= name %>.icon.class =ICON.classes.<%=  name.toLowerCase() %>;
}
</script>
<div class="form-group-material form-group has-feedback  has-feedback-{{<%= model %>.form.options.<%= name %>.icon.position}}"
     id="input<%= name %>">
    <label

            class="control-label {{<%= model %>.form.LabelVisible('<%= name %>')?'is-visible animate':''}}">
        {{<%= model %>.form.options.<%= name %>.placeholder}}
    </label>
    <input
            ng-model="<%= model + "." + name %>" name="<%= model %>_<%= name %>"
            ng-readonly="<%= model %>.form.options.<%= name %>.readonly"
            ng-disabled="<%= model %>.form.options.<%= name %>.disabled"
            maxlength="{{<%= model %>.form.options.<%= name %>.maxlength}}"
            type="{{<%= model %>.form.options.<%= name %>.type}}"
            <%= options.model ? "value='{{" + options.model + "}}'" : "" %>
            class="form-control"
            placeholder="{{<%= model %>.form.options.<%= name %>.placeholder}}">

    <div class="form-control-feedback" ng-if="<%= model %>.form.options.<%= name %>.icon.class!=='none'">
        <i class="icon-{{<%= model %>.form.options.<%= name %>.icon.class}} text-{{<%= model %>.validation.getColor('<%= name %>',<%= model %>.form.options.<%= name %>.icon.color)}}">

        </i>
    </div>
    <span ng-if="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
        {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validation.getMessages('<%= name %>').length>0" class="help-block">

        <p class="text-{{$eval(validation).type}}"
           ng-repeat="(key,validation) in <%= model %>.validation.getMessages('<%= name %>') track by key">
               <i class="{{$eval(validation).icon}}"></i> {{$eval(validation).message}}
        </p>
    </span>
</div>

<script>
    <% if(options.format){ %>
    var formaty =<%= model %>.
    form.options.<%= name %>.format;
    $('[name="<%= model %>_<%= name %>"]').mask(formaty.mask, formaty.options);
    if (<%= model %>.
    form.options.<%= name %>.isNumber
    )
    {
        $('[name="<%= model %>_<%= name %>"]').change(function () {
            $me = $(this).val();
            $me = $me.replace(/\./g, 'POINT').replace(/\W/g, '').replace(/POINT/g, '.').replace(/[a-z]/gi, '');
            <%= model %>.
            <%= name %>_DragonClean = $me;
        })
    }
    <% } %>
    <% if(options.maxlength){ %>
    $('[name="<%= model %>_<%= name %>"]').maxlength();
    <% } %>

    $('[name="<%= model %>_<%= name %>"]').blur(function () {
        $(".map-wrapper").hide();
        STEP.register({
                scope: "<%= model %>",
                action: "Change Text",
                field: "<%= name %>",
                value: <%= model %>.<%= name %>
        });
    });

    $('[name="<%= model %>_<%= name %>"]').keyup(function () {
        $(this).trigger("change");
        $("#input<%= name %>").removeClass('has-warning has-error has-success');
        $("#input<%= name %>").addClass('has-' + <%= model %>.validation.getType('<%= name %>'));
    });
    $('[name="<%= model %>_<%= name %>"]').trigger("change");
    setTimeout(function () {
        $("#input<%= name %>").addClass('has-' + <%= model %>.validation.getType('<%= name %>')
    )
        ;
    }, 100);


    var isReadProgram = <%= model %>.
    form.isReadOnly('<%= name %>');
    if (isReadProgram !== false) {
        <%= model %>.
        form.options.<%= name %>.disabled = true;
        if (isReadProgram !== undefined) {
            <%= model %>.<%= name %> = isReadProgram;

            if (<%= model %>.
            form.options.<%= name %>.isNumber
        )
            {
                $me = isReadProgram;
                $me = $me.replace(/\./g, 'POINT').replace(/\W/g, '').replace(/POINT/g, '.').replace(/[a-z]/gi, '');
                <%= model %>.
                <%= name %>_DragonClean = $me;
            }
            $('[name="<%= model %>_<%= name %>"]').val(isReadProgram);
        }
    }
</script>