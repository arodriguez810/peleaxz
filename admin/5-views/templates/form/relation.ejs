<%
var name = name || "";
var options = {
    text: params.capitalize(name),
    icon: {
        class: "upload",
        position: "left",
        color: COLOR.primary
    },
    type: "normal",
    tempId: Math.ceil(new Date().getTime() / 100000),
    width: "modal-full",
    posttype: "relations",
    title: "Add Multiple",
    master: null,
    originalField: "id"
    //table:""
};

options = OBJECT.merge(options, opts);
options.color = options.type === "form" ? "{{" + model + ".validation.stateDefault()}}" : COLOR.primary;
var toclient = JSON.stringify(options);

options.originalField = options.field;
if (options.master === null) {
    options.field = "tempid";
} else {
    options.tempId = options.master;
}
%>
<script>
    var keyColumn = <%= model %>.table.crud.table.key;
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    <%= model %>.<%= name %> = '<%= model %><%= options.tempId %>';
    var thisID = eval(`<%= model %>.${keyColumn}`);

</script>
<div class="form-group-material form-group has-feedback has-{{<%= model %>.validation.getType('<%= name %>')}}  has-feedback-{{<%= model %>.form.options.<%= name %>.icon.position}}"
     id="input<%= name %>">
    <label
            class="control-label">
        {{<%= model %>.form.options.<%= name %>.title}}
    </label>

    <button name="<%= model %>_<%= name %>"
            type="button"
            role="button"
            class="btn bg-<%= options.color %>-800 btn-block legitRipple">
        <%= options.model ? "{{" + options.model + "}}" : "" %>
        {{<%= model %>.<%= name %>Count>0? <%= model %>.<%= name %>Count + " Files" :""}}
        <i class="icon-{{<%= model %>.form.options.<%= name %>.icon.class}} position-{{<%= model %>.form.options.<%= name %>.icon.position}}"></i>
        {{<%= model %>.form.options.<%= name %>.title}}
    </button>

    <span ng-if="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
        {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validation.getMessages('<%= name %>').length>0" class="help-block">

        <p class="text-{{$eval(validation).type}}"
           ng-repeat="(key,validation) in <%= model %>.validation.getMessages('<%= name %>') track by key">
               <i class="{{$eval(validation).icon}}"></i> {{$eval(validation).message}}
        </p>
    </span>

</div>
<script>


    $(document).ready(function () {


        $('[name="<%= model %>_<%= name %>"]').click(function () {

            var id<%= name %> = '<%= model %><%= options.tempId %>';
            var field<%= name %> = "<%= options.field %>";
            if (!DSON.oseaX(thisID)) {
                id<%= name %> = thisID;
                var field<%= name %> = '<%= options.originalField %>';
            }

            SWEETALERT.loading({message: "Loading..."});
            var linkCrud<%= name %> = eval("CRUD_<%= options.table %>");
            BASEAPI.list("<%= options.table %>",
                {
                    limit: 0,
                    page: 1,
                    orderby: linkCrud<%= name %>.table.key || "id",
                    order: "asc",
                    join: linkCrud<%= name %>.table.single,
                    where: [
                        {
                            field: field<%= name %>,
                            value: id<%= name %>
                        }
                    ]
                }
                , function (info) {
                    SWEETALERT.stop();

                    baseController.viewData = {
                        from: "<%= model %>",
                        to: "<%= options.table %>",
                        data: [
                            {
                                field: field<%= name %>,
                                value: id<%= name %>
                            }
                        ],
                        crud: linkCrud<%= name %>
                    };

                    baseController.viewData.readonly = eval(`({${field<%= name %>}:'${id<%= name %>}'})`);
                    baseController.viewData.fieldKey = field<%= name %>;

                        <%= model %>.
                    modal.modalView("<%= options.table %>", {
                        header: {
                            title: "<%= options.title %>",
                            icon: "<%= options.icon.class %>"
                        },
                        footer: {
                            cancelButton: true
                        },
                        content: {
                            loadingContentText: "Loading..."
                        },
                    });
                });

        });
    });
</script>

