<%
if(DATA.name!==undefined){
    var name, model, opts;
    name = DATA.name;
    model = DATA.model;
    opts = DATA.opts;
}
var name  = name || "";
var options = {
    placeholder: params.capitalize(name),
    model: 1,
    icon: {
        class: "none",
        position: "left",
        color: COLOR.secundary + "-800"
    },
    helptext: '',
    posttype: "view",
    when: null

};

options = OBJECT.merge(options, opts); var nameclean = name.replace(/\./g, '_');
options.icon.spyce = options.icon.class === "none" ? "remove-input-space" : "";
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.triggers.table.before.control("<%= nameclean %>");
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");

    <%= model %>.form.schemas.insert["<%= name %>"] = FORM.schemasType.calculated;

    if (MESSAGE.exist('columns.<%= nameclean %>')) {
        <%= model %>.
        form.options.<%= name %>.placeholder = MESSAGE.ic('columns.<%= nameclean %>');
    }
</script>
<div class="<%= options.icon.spyce %> form-group-material form-group has-feedback has-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}  has-feedback-<%= options.icon.position %>"
     id="input<%= model %>_<%= nameclean %>">
    <label
            id="label<%= model %>_<%= nameclean %>"
            class="control-label is-visible animate" style="color:#000000 !important;">
        {{::<%= model %>.form.options.<%= name %>.placeholder}}
        <% if(options.popover){ %>
            <i
                    id="popover<%= model %>_<%= nameclean %>" class="icon-help">
            </i>
        <% } %>
    </label>
    <input
            ng-model="<%= model + "." + name %>" name="<%= name %>"
            readonly
            type="text"
            class="form-control"
            placeholder="{{::<%= model %>.form.options.<%= name %>.inputPlaceholder}}">

    <div class="form-control-feedback">
        <i class="icon-<%= options.icon.class %> text-secundary">

        </i>
    </div>
    <span ng-show="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
    {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validate['<%= name %>'].messages.length>0" class="help-block">
<p class="text-{{validation.type}}" ng-show="validation.visible!==false || <%= model %>.form.intent===true"
   ng-repeat="validation in <%= model %>.validate['<%= name %>'].messages">
<i class="{{validation.icon}}"></i> {{validation.message}}
    </p>
    </span>
</div>
<script>
    $(document).ready(function () {
        <% if(options.popover){ %>
        $('#popover<%= model %>_<%= nameclean %>').popover({
            container: 'body',
            title: eval("`" +<%= model %>.form.options.<%= name %>.popover.title + "`"),
            content:eval("`" +<%= model %>.form.options.<%= name %>.popover.content + "`"),
        trigger: 'click'
    });
        <% } %>
        <%= model %>.triggers.table.after.control("<%= nameclean %>");
        <% if(options.format){ %>
        var formaty =<%= model %>.
        form.options.<%= name %>.format;
        $('[name="<%= name %>"]').mask(formaty.mask, formaty.options);
        <% } %>

    });
</script>