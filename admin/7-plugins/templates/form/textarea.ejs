<%
if(DATA.name!==undefined){
    var name, model, opts;
    name = DATA.name;
    model = DATA.model;
    opts = DATA.opts;
}
var name =  name || "";
var options = {
    placeholder: params.capitalize(name),
    type: "text",
    icon: {
        class: "none",
        position: "left",
        color: TAG.table + "-800"
    },
    pin: '80',
    helptext: '',
    format: '',
    readonly: false,
    disabled: false,
    autocomplete: '',
    posttype: "text"
    //maxlength: 10,

};
options = OBJECT.merge(options, opts); var nameclean = name.replace(/\./g, '_');
options.autocomplete = options.autocomplete ? "autocomplete='Off'" : '';
options.format = options.format ? options.format : false;
options.model = options.model ? options.model : false;
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.triggers.table.before.control("<%= nameclean %>");
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    if (MESSAGE.exist('columns.<%= nameclean %>')) {
        <%= model %>.
        form.options.<%= name %>.placeholder = MESSAGE.i('columns.<%= nameclean %>');
    }
</script>
<div class="form-group-material form-group has-feedback has-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}  has-feedback-{{<%= model %>.form.options.<%= name %>.icon.position}}"
     id="input<%= model %>_<%= nameclean %>">
    <label
            id="label<%= model %>_<%= nameclean %>"
            class="control-label {{<%= model + "." + name %>?'is-visible animate':(<%= model + "." + name %>==0?'is-visible animate':'')}}">
        {{<%= model %>.form.options.<%= name %>.placeholder}}
    </label>
    <textarea rows=""
              ng-model="<%= model + "." + name %>" name="<%= model %>_<%= nameclean %>"
              id="<%= model %>_<%= nameclean %>"
              ng-readonly="<%= model %>.form.options.<%= name %>.readonly"
              ng-disabled="<%= model %>.form.options.<%= name %>.disabled"
              maxlength="{{<%= model %>.form.options.<%= name %>.maxlength}}"
              ng-model-onblur
              type="{{<%= model %>.form.options.<%= name %>.type}}"
            <%= options.model ? "value='{{" + options.model + "}}'" : "" %>
              class="form-control"
              placeholder="{{<%= model %>.form.options.<%= name %>.placeholder}}"></textarea>

    <div class="form-control-feedback">
        <i class="icon-{{<%= model %>.form.options.<%= name %>.icon.class}} text-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}">

        </i>
    </div>
    <span ng-if="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
        {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validate['<%= name %>'].messages.length>0" class="help-block">
       <p class="text-{{validation.type}}" ng-show="validation.visible!==false"
          ng-repeat="(key,validation) in <%= model %>.validate['<%= name %>'].messages track by key">
               <i class="{{validation.icon}}"></i> {{validation.message}}
        </p>
    </span>
</div>
<script>
    $(document).ready(function () {
        <%= model %>.
        form.options.<%= name %>.autosize = false;
        <%= model %>.
        triggers.table.after.control("<%= nameclean %>");
        <% if(options.format){ %>
        $('[name="<%= model %>_<%= nameclean %>"]').formatter({
            pattern: '<%= options.format %>'
        });
        <% } %>
        <% if(options.maxlength){ %>
        //$('[name="<%= model %>_<%= nameclean %>"]').maxlength();
        <% } %>
        function resizeme<%= model %>_<%= nameclean %>() {
            if (!DSON.oseaX($('[name="<%= model %>_<%= nameclean %>"]').val().lines().length > 1)) {
                if (<%= model %>.
                form.options.<%= name %>.autosize === false
            )
                {
                    <%= model %>.
                    form.options.<%= name %>.autosize = true;
                    $('[name="<%= model %>_<%= nameclean %>"]').css('max-height', "");
                    autosize(document.querySelectorAll('textarea'));
                }
            } else {
                if ($('[name="<%= model %>_<%= nameclean %>"]').val().length><%= options.pin %>) {
                    if (<%= model %>.form.options.<%= name %>.autosize === false)
                    {
                        <%= model %>.
                        form.options.<%= name %>.autosize = true;
                        $('[name="<%= model %>_<%= nameclean %>"]').css('max-height', "");
                        autosize(document.querySelectorAll('textarea'));
                    }
                    return;
                }
                <%= model %>.
                form.options.<%= name %>.autosize = false;
                $('[name="<%= model %>_<%= nameclean %>"]').css('max-height', 38);

            }
        }

        $('[name="<%= model %>_<%= nameclean %>"]').keyup(function () {

            resizeme<%= model %>_<%= nameclean %>();
            $(this).trigger("change");

        });
        $('[name="<%= model %>_<%= nameclean %>"]').trigger("change");
        resizeme<%= model %>_<%= nameclean %>();
        $('[name="<%= model %>_<%= nameclean %>"]').blur(function () {
            STEP.register({
                scope: "<%= model %>",
                action: "Change TextArea",
                field: "<%= name %>",
                value: <%= model %>.<%= name %>
        })
            ;

        });
        var isReadProgram = <%= model %>.
        form.isReadOnly('<%= name %>');
        if (isReadProgram !== false) {
            <%= model %>.
            form.options.<%= name %>.disabled = true;
            if (isReadProgram !== undefined) {
                <%= model %>.<%= name %> = isReadProgram;
                $('[name="<%= model %>_<%= nameclean %>"]').html(isReadProgram)
            }
        }


    });
</script>