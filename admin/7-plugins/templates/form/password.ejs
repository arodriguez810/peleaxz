<%
if(DATA.name!==undefined){
    var name, model, opts;
    name = DATA.name;
    model = DATA.model;
if (DATA.opts !== "")
        opts = eval("(" + DATA.opts + ")");
}
var name  = name || "";
var options = {
    placeholder: params.capitalize(name),
    type: "text",
    icon: {
        class: "lock",
        position: "left",
        color: COLOR.secundary+"-800"
    },
    helptext: '',
    format: '',
    readonly: false,
    disabled: false,
    autocomplete: '',
    isPassword: true,
    posttype: "text",
    normal:false,
    //maxlength: 10,

};
options = OBJECT.merge(options, opts); var nameclean = name.replace(/\./g,'_');
options.autocomplete = options.autocomplete ? "autocomplete='Off'" : '';
options.model = options.model ? options.model : false;
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.triggers.table.before.control("<%= nameclean %>");
    <%= model %>.form.schemas.select["<%= name %>"] =FORM.schemasType.password;
    <%= model %>.form.schemas.insert["<%= name %>"] =FORM.schemasType.password;
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    if(MESSAGE.exist('columns.<%= nameclean %>')){
        <%= model %>.form.options.<%= name %>.placeholder = MESSAGE.ic('columns.<%= nameclean %>');
    }
</script>
<div class="form-group-material form-group has-feedback has-{{<%= model %>.validate['<%= name %>'].type || <%= model %>.defaultColor }}  has-feedback-<%= options.icon.position %>"
     id="input<%= model %>_<%= nameclean %>">
    <label
            id="label<%= model %>_<%= nameclean %>"
            class="control-label is-visible animate" style="color:#000000 !important;">
        {{::<%= model %>.form.options.<%= name %>.placeholder}}
        <% if(options.popover){ %>
            <i
                    id="popover<%= model %>_<%= nameclean %>" class="icon-help">
            </i>
        <% } %>
    </label>


    <a dragonlanguage="" title="MESSAGE.ic('mono.ViewPassword')" id="list<%= name %>" class="label bg-<%= COLOR.secundary %> label-icon"
       style="float: right;margin-bottom: -6px;" onclick="TurnPassword<%= model %>_<%= nameclean %>('toggle')">
        <i id="passwordIcon<%= model %>_<%= nameclean %>" class="icon-eye"></i>
    </a>

    <input
            autocomplete="off"
            ng-model="<%= model + "." + name %>" name="<%= model %>_<%= nameclean %>"
            ng-readonly="<%= model %>.form.options.<%= name %>.readonly"
            ng-disabled="<%= model %>.form.options.<%= name %>.disabled"
            maxlength="{{<%= model %>.form.options.<%= name %>.maxlength}}"
            type="text"
            ng-model-onblur
            <%= options.model ? "value='{{" + options.model + "}}'" : "" %>
            class="form-control pw"
            placeholder="{{::<%= model %>.form.options.<%= name %>.inputPlaceholder}}">

    <div class="form-control-feedback" ng-if="<%= model %>.form.options.<%= name %>.icon.class!=='none'">
        <i class="icon-<%= options.icon.class %> text-secundary">

        </i>
    </div>
    <span ng-if="<%= model %>.form.options.<%= name %>.helptext!=''"
          class="help-block text-muted">
        {{<%= model %>.form.options.<%= name %>.helptext}}
    </span>

    <span ng-show="<%= model %>.validate['<%= name %>'].messages.length>0" class="help-block">

        <p class="text-{{validation.type}}" ng-show="validation.visible!==false || <%= model %>.form.intent===true"
           ng-repeat="(key,validation) in <%= model %>.validate['<%= name %>'].messages track by key">
               <i class="{{validation.icon}}"></i> {{validation.message}}
        </p>
    </span>
</div>

<script>

    <%= model %>.triggers.table.after.control("<%= nameclean %>");

    <% if(options.popover){ %>
    $('#popover<%= model %>_<%= nameclean %>').popover({
        container: 'body',
        title: eval("`" +<%= model %>.form.options.<%= name %>.popover.title + "`"),
        content:eval("`" +<%= model %>.form.options.<%= name %>.popover.content + "`"),
    trigger: 'click'
    });
    <% } %>

    function TurnPassword<%= model %>_<%= nameclean %>(action) {
        var button = $("#passwordIcon<%= model %>_<%= nameclean %>");
        var x = document.getElementsByName('<%= model %>_<%= nameclean %>')[0];
        if (action === "toggle") {
            if (x.type === "password") {
                x.type = "text";
                button.removeClass('icon-eye');
                button.addClass('icon-eye-blocked');
            } else {
                if ($('[name="<%= model %>_<%= nameclean %>"]').val() !== '') {
                    x.type = "password";
                    button.addClass('icon-eye');
                    button.removeClass('icon-eye-blocked');
                }
            }
        } else {
            if (action === "text") {
                x.type = "text";
                button.removeClass('icon-eye');
                button.addClass('icon-eye-blocked');
            } else {
                if ($('[name="<%= model %>_<%= nameclean %>"]').val() !== '') {
                    x.type = "password";
                    button.addClass('icon-eye');
                    button.removeClass('icon-eye-blocked');
                }
            }
        }
    }



    <% if(options.maxlength){ %>
    //$('[name="<%= model %>_<%= nameclean %>"]').maxlength();
    <% } %>
    $('[name="<%= model %>_<%= nameclean %>"]').keyup(function () {

        $meval = $(this).val();
        TurnPassword<%= model %>_<%= nameclean %>('password');
        <% if(!options.normal){ %>
        if (DSON.oseaX($meval)) {
            TurnPassword<%= model %>_<%= nameclean %>('text');
        }
        if ($meval.indexOf(FORM.config.password) !== -1) {
            $(this).val($meval.replace(FORM.config.password, ''));
        }
        <% } %>
        $(this).trigger("change");
    });
    <% if(!options.normal){ %>
        $('[name="<%= model %>_<%= nameclean %>"]').trigger("change");
    <% }else{ %>
    setTimeout(function () {
        TurnPassword<%= model %>_<%= nameclean %>();
    },100);

    <% } %>
    $('[name="<%= model %>_<%= nameclean %>"]').blur(function () {
        STEP.register({
                scope: "<%= model %>",
                action: "Change Password",
                field: "<%= name %>",
                value: <%= model %>.<%= name %>
        });

    });
    var isReadProgram = <%= model %>.form.isReadOnly('<%= name %>');
    if (isReadProgram !== false) {
        <%= model %>.
        form.options.<%= name %>.disabled = true;
        if (isReadProgram !== undefined) {
            <%= model %>.<%= name %> = isReadProgram;

            if (<%= model %>.
            form.options.<%= name %>.isNumber
        )
            {
                $me = isReadProgram;
                $me = $me.replace(/\./g, 'POINT').replace(/\W/g, '').replace(/POINT/g, '.').replace(/[a-z]/gi, '');
                <%= model %>.
                <%= name %>_DragonClean = $me;
            }
            $('[name="<%= model %>_<%= nameclean %>"]').val(isReadProgram);
        }
    }
</script>