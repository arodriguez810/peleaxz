<%
if (DATA.name !== undefined) {
    var name, model, opts;
    name = DATA.name;
    model = DATA.model;
    opts = DATA.opts;
}
var name = name || "";
var options = {
    text: name + "?",
    checked: false,
    posttype: "checkbox",
    disabled: false,
    size: 'switchery',
    icon: {
        class: "none",
        position: "left",
        color: COLOR.secundary + "-800"
    },
};
options = OBJECT.merge(options, opts); var nameclean = name.replace(/\./g, '_');
options.icon.spyce = options.icon.class === "none" ? "remove-input-space" : "";
options.model = options.model ? options.model : false;
popopme = function(entity, field){
    var prueba = HINTS.filter(d => {
        return d.entities === entity && d.field_names === field
    })
    function sortArray() {
        options.mess = prueba.sort(function(a, b){return b.id - a.id});
    }
    sortArray();
    //console.log("Hola", options.mess);
}
popopme(model, nameclean);
var toclient = JSON.stringify(options);
%>
<script>
    <%= model %>.triggers.table.before.control("<%= nameclean %>");
    <%= model %>.form.schemas.insert["<%= name %>"] = FORM.schemasType.checkbox;
    <%= model %>.form.schemas.select["<%= name %>"] = FORM.schemasType.checkbox;
    <%= model %>.form.registerField("<%= name %>", "<%= toclient %>");
    if (MESSAGE.exist('columns.<%= nameclean %>')) {
        <%= model %>.
        form.options.<%= name %>.text = MESSAGE.ic('columns.<%= nameclean %>');
    }
    if(new SESSION().isLogged()) {
        <%= model %>.form.options.<%= name %>.mess = <%= model %>.form.options.<%= name %>.mess.filter(d => {
            return d.company == new SESSION().current().compania_id;
        })
        if(<%= model %>.form.options.<%= name %>.mess.length == 0){
            delete <%= model %>.form.options.<%= name %>.mess
        }
        if (<%= model %>.form.options.<%= name %>.mess){
            <%= model %>.form.options.<%= name %>.popover = {
                title: <%= model %>.form.options.<%= name %>.mess[0].field_names.replace('_',' '),
                content: <%= model %>.form.options.<%= name %>.mess[0].text,
                label: MESSAGE.exist('columns.<%= nameclean %>') ? MESSAGE.i('columns.<%= nameclean %>') : <%= model %>.form.options.<%= name %>.mess[0].field_names.replace('_',' ')
            }
        }
    }
    var isReadProgram = <%= model %>.form.isReadOnly('<%= name %>');
    if (isReadProgram !== false) {
        <%= model %>.
        form.options.<%= name %>.disabled = true;
        if (isReadProgram !== undefined) {
            <%= model %>.<%= name %> = isReadProgram;
            checkbox<%= model %>_<%= nameclean %> = isReadProgram;
        }
    }

    <%= model %>.<%= name %> = eval(<%= model %>.<%= name %>)
    ;
    <%= model %>.<%= name %> = <%= model %>.<%= name %>? true : false;
</script>
<label>

    {{<%= model %>.form.options.<%= name %>.text}}
    <i ng-show="<%= model %>.form.options.<%= name %>.mess.length>0"
       id="popover<%= model %>_<%= nameclean %>" class="icon-help">
    </i>

</label>
<div>
    <div class="checkbox checkbox-switchery <%= options.size %>"
         ng-show="!<%= model %>.form.options.<%= name %>.disabled">
        <input
                type="checkbox"
                name="<%= model %>_<%= nameclean %>"
                id="<%= model %>_<%= nameclean %>"
                class="switchery"
        />
    </div>
    <div class="checkbox checkbox-switchery" ng-show="<%= model %>.form.options.<%= name %>.disabled">

        {{<%= model %>.form.options.<%= name %>.text}}
        <input ng-model="<%= model + "." + name %>"
               type="checkbox"
               class="switchery"
               readonly="readonly"
               disabled="disabled"
        />
    </div>

</div>

<script>
    var element = document.getElementById("<%= model %>_<%= nameclean %>");
    var checkbox<%= model %>_<%= nameclean %> = new Switchery(element, {size: "small"});
    if (<%= model %>.<%= name %>)
    {
        checkbox<%= model %>_<%= nameclean %>.setPosition(<%= model + "." + name %>);
    }

    $("#<%= model %>_<%= nameclean %>").change(function (val) {
        <%= model %>.<%= name %> = $(this).prop("checked");
        STEP.register({
            scope: "<%= model %>",
            action: "Change Checkbox",
            field: "<%= name %>",
            value: <%= model %>.<%= name %>
        })
        ;
        <%= model %>.
        refreshAngular();
    });

    if(new SESSION().isLogged()) {
        if (<%= model %>.form.options.<%= name %>.mess){
            $('#popover<%= model %>_<%= nameclean %>').popover({
                container: 'body',
                title: eval("`" +<%= model %>.form.options.<%= name %>.popover.label + "`"),
                content:eval("`" +<%= model %>.form.options.<%= name %>.popover.content + "`"),
            trigger: 'click'
        });
        }
    }
    <%= model %>.triggers.table.after.control("<%= nameclean %>");
</script>