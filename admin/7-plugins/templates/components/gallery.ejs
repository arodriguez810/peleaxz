<style>
    .notsupportitem i {
        font-size: 140px;
    }
</style>
<script>
    var viewModel = MODAL.getViewData() || DRAGON.viewData;
    <%
    DATA.nameclean = "id" + new Date().getTime();
    %>
    <%= DATA.scope %>.<%= DATA.nameclean %> = {};
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles = {};
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.viewModel = viewModel;
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.data = {};
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.data.files = [];
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.upload = false;
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.rootFolder = viewModel.root;
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.fileName = viewModel.file;
    var firstThis = true;
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.refresh = function () {
        var http = new HTTP();
        if (!firstThis) {
            $(`[data-dragonfile='/${viewModel.root}']:not(:hidden)`).each(function () {
                FILE.runServerFile($(this))
            });
        }
        DRAGONAPI.ajax.get(http.path(["files", "api"]), {folder: viewModel.root}, function (data) {
            for (var i in data.data.files) {
                var file = data.data.files[i];
                data.data.files[i] = {
                    url: `${http.path([FOLDERS.files, viewModel.root])}/${file}`,
                    cleanUrl: http.cleanRoot(`${http.path([FOLDERS.files, viewModel.root])}/${file}`),
                    selected: false,
                    fileName: file,
                    original: file.split('___')[0],
                    ext: FILE.extension(file),
                }
                data.data.files[i].originalCrop = DSON.substringif(data.data.files[i].original, 12);
            }
            <%= DATA.scope %>.<%= DATA.nameclean %>.
            galleryFiles.data = data.data;
            <%= DATA.scope %>.<%= DATA.nameclean %>.
            galleryFiles.columns = (12 / viewModel.columns);
            <%= DATA.scope %>.
            refreshAngular();
            firstThis = false;
        });
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.refresh();
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.isSingle = function () {
        return <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.viewModel.maxfiles == 1;
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.reachMaxFiles = function () {
        return <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.data.files.length < <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.viewModel.maxfiles;
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.uploadview = function (file) {
        <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.upload = !<%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.upload;
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.Icon = function (file) {
        if (DSON.oseaX(file))
            return "";
        if (FILE.isImage(file.fileName)) {
            return "image";
        } else {
            return FILE.fileToIcon(file.fileName);
        }
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.view = function (file) {
        var load = new LOAD();
        if (FILE.isImage(file.fileName)) {
            load.template('templates/components/crop', {src: file.url}, function (html) {
                <%= DATA.scope %>.
                modal.simpleModal(html, {header: {title: MESSAGE.i('mono.preview')}});
            });
        } else {
            load.template('templates/components/object', {src: file.url}, function (html) {
                <%= DATA.scope %>.
                modal.simpleModal(html, {header: {title: MESSAGE.ic('mono.preview')}});
            });
        }
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.check = function (file) {
        file.selected = !file.selected;
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.allChecked = function () {
        var allSelected = <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.data.files.filter(function (file) {
            return !file.selected;
        });
        return allSelected.length === 0;
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.allCheckedText = function () {
        return <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.allChecked() ? "UnCheck" : "Check";
    };

    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.allCheckedIcon = function () {
        return !<%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.allChecked() ? "checkbox-unchecked" : "checkbox-checked";
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.checkAll = function () {
        if (<%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.allChecked()
    )

        {
            for (var file of <%= DATA.scope %>.<%= DATA.nameclean %>.
            galleryFiles.data.files
        )
            {
                file.selected = false;
            }
        }
    else
        {
            for (var file of <%= DATA.scope %>.<%= DATA.nameclean %>.
            galleryFiles.data.files
        )
            {
                file.selected = true;
            }
        }
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.getIcon = function (file) {
        return !file.selected ? "checkbox-unchecked" : "checkbox-checked";
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.deleteSelected = function () {

        var allSelected = <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.data.files.filter(function (file) {
            return file.selected;
        });
        STEP.register({
            scope: DRAGON.currentModel.modelName,
            action: `Deleted Selected ${allSelected.length} Files`,
            field: viewModel.root
        });
        <%= DATA.scope %>.<%= DATA.nameclean %>.
        galleryFiles.delete(allSelected);
    };
    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.delete = function (files) {
        STEP.register({
            scope: DRAGON.currentModel.modelName,
            action: `Deleted ${files.cleanUrl} File`,
            field: viewModel.root
        });
        var finalArray = [];
        if (!Array.isArray(files)) {
            finalArray.push(files.cleanUrl);
        } else
            for (var i in files) {
                finalArray.push(files[i].cleanUrl);
            }
        SWEETALERT.confirm({
            message: MESSAGE.i('alerts.AYSDeleteFile'),
            confirm: function () {
                SWEETALERT.loading({message: MESSAGE.ic('mono.deleting')});
                DRAGONAPI.ajax.post(new HTTP().path(["files", "api", "delete"]), {filename: finalArray}, function (data) {
                    SWEETALERT.stop();
                    if (data.data.deleted) {
                        <%= DATA.scope %>.<%= DATA.nameclean %>.
                        galleryFiles.refresh();
                    }
                });
            }
        });
    };

    <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.downloadAll = function () {
        STEP.register({
            scope: DRAGON.currentModel.modelName,
            action: `Download All`,
            field: viewModel.root
        });
        SWEETALERT.confirm({
            message: MESSAGE.i('alerts.AYSDownloadAll'),
            confirm: function () {
                var http = new HTTP();
                SWEETALERT.loading({message: MESSAGE.i('mono.Preparingdownloadforfiles')});
                DRAGONAPI.ajax.get(http.path(["files", "api", "download"]), {
                    folder: viewModel.root,
                    name: MODAL.current().header.title + ".zip"
                }, function (data) {
                    SWEETALERT.stop();

                    var url = http.path(["files", viewModel.root, MODAL.current().header.title + ".zip"]);
                    DOWNLOAD.fileUrl(url, MODAL.current().header.title + ".zip");
                });
            }
        });
    };
</script>
<div dragonlanguage=""
     ng-show="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.columns && <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.data.files.length<=0"
     class="alert alpha-<%= COLOR.secundary %> border-<%= COLOR.secundary %> alert-styled-left">
    <language>MESSAGE.i('mono.Thereisnofilestoshow')</language>
</div>

<div class="col-md-12 pull-right22 pl-0">
    <div class="panel panel-<%= COLOR.secundary %>">
        <div class="panel-body">
            <div class="row">
                <center>
                    <div class="btn-group"
                         ng-show="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.reachMaxFiles()">
                        <button
                                title="MESSAGE.i('columns.upload_image')" type="button"
                                role="button"
                                class=" btn bg-<%= COLOR.secundary %>-600 btn-labeled btn-xs"
                                ng-show="<%= DATA.scope %>.allow('file.upload')"
                                ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.uploadview()"
                                dragonlanguage="">
                            <b><i class="icon-upload"></i></b>
                            <language>MESSAGE.i('columns.upload_image')</language>
                        </button>
                    </div>

                    <div class="btn-group" ng-show="!<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.isSingle()">
                        <button title="{{<%= DATA.scope %>
                .galleryFiles.allCheckedText()}} All"
                                ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.checkAll()" type="button"
                                ng-show="<%= DATA.scope %>.allow(['file.remove','file.download','file.upload'])"
                                class="btn bg-<%= COLOR.secundary %>-600 btn-icon">
                            <span class="icon-{{<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.allCheckedIcon()}}"></span>
                        </button>

                    </div>

                    <div class="btn-group"
                         ng-show="!<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.isSingle() && <%= DATA.scope %>.allow('file.download')">
                        <button title="Descargar todo"
                                ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.downloadAll()"
                                type="button"
                                class="btn bg-<%= COLOR.secundary %>-600 btn-icon">
                            <span class="icon-download"></span>
                        </button>
                    </div>


                    <div class="btn-group"
                         ng-show="!<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.isSingle() && <%= DATA.scope %>.allow('file.remove')">
                        <button title="Eliminar imágenes seleccionadas"
                                ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.deleteSelected()"
                                type="button"
                                class="btn bg-<%= COLOR.secundary %>-600 btn-icon" style="margin-right: 0">
                            <span class="icon-trash"></span>
                        </button>
                    </div>
                </center>
            </div>
        </div>
    </div>

</div>

<div class="panel panel-flat"
     ng-show="(<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.upload && <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.columns) && <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.reachMaxFiles()">

    <div class="panel-body">
        <form class="dropzone" style="margin-top: 75px;" id="<%= DATA.nameclean %>" method="post"
              enctype="multipart/form-data">
            <input type="hidden" name="folder"
                   value="{{<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.rootFolder}}">
            <input type="hidden" name="user" value="{{DRAGON.userID}}">
            <input type="hidden" name="filename"
                   value="{{<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.fileName}}">
        </form>
    </div>
</div>
<div class="row imagen-panel" id="galleryFiles">
    <div class="col-md-{{<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.columns}}"
         ng-repeat="(key,file) in <%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.data.files track by key">
        <div class="panel panel-flat">
            <div class="panel-body image-body">
                <div class="thumbnail" style="width: 100%">
                    <div class="thumb" style="width: 100%;min-height: 200px;">
                        <div ng-if="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.Icon(file)!=='image'"
                             class="notsupportitem"
                             ng-bind-html="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.Icon(file)"></div>
                        <object ng-if="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.Icon(file)!=='image'"
                                title="{{file.original}}"
                                style='height: auto;width: 200px'
                                data='{{file.url}}'></object>
                        <img ng-if="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.Icon(file)==='image'"
                             style='max-height: 198px;width: 200px'
                             src='{{file.url}}'/>

                    </div>
                    <div class="panel-footer panel-footer-transparent">
                        <div style="padding-right: 0px;text-align: center;">
                            <strong>{{file.original}}</strong>
                        </div>
                        <div class="" style="padding-right: 0px;text-align: center;">

                            <a ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.view(file)"
                               class="btn  border-<%= COLOR.primary %>-300 text-black btn-icon">
                                <i class="icon-zoomin3"></i>
                            </a>
                            <a href="{{file.url}}" download="{{file.original}}"
                               ng-show="<%= DATA.scope %>.allow('file.download')"
                               class="btn  border-<%= COLOR.primary %>-300 text-black btn-icon">
                                <i class="icon-download"></i>
                            </a>
                            <a ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.delete(file)"
                               ng-show="<%= DATA.scope %>.allow('file.remove')"
                               class="btn  border-<%= COLOR.primary %>-300 text-black btn-icon">
                                <i class="icon-trash"></i>
                            </a>
                            <a ng-click="<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.check(file)"
                               ng-show="<%= DATA.scope %>.allow(['file.remove','file.download','file.upload'])"
                               class="btn  border-<%= COLOR.primary %>-300 text-black btn-icon check-button">
                                <i class="icon-{{<%= DATA.scope %>.<%= DATA.nameclean %>.galleryFiles.getIcon(file)}} position-left"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var http = new HTTP();
        $("#<%= DATA.nameclean %>").attr('action', http.path(["files", "api", "upload"]));
        var myDropzone = $("#<%= DATA.nameclean %>")[0].dropzone;
        if (myDropzone) {
            myDropzone.destroy();
        }
        myDropzone = $("#<%= DATA.nameclean %>").dropzone({
            paramName: "toupload", // The name that will be used to transfer the file
            dictDefaultMessage: MESSAGE.i('alerts.upload'),
            maxFilesize: viewModel.maxsize || 20, // MB
            maxFiles: viewModel.maxfiles || 20,
            acceptedFiles: viewModel.acceptedFiles || null,
            init: function () {
                this.on('complete', function (file) {
                    this.removeFile(file);

                    STEP.register({
                        scope: DRAGON.currentModel.modelName,
                        action: "Upload File",
                        field: viewModel.root
                    });

                    <%= DATA.scope %>.<%= DATA.nameclean %>.
                    galleryFiles.uploadview();
                    <%= DATA.scope %>.<%= DATA.nameclean %>.
                    galleryFiles.refresh();
                });
                this.on('completemultiple', function (file) {
                    <%= DATA.scope %>.<%= DATA.nameclean %>.
                    galleryFiles.refresh();
                });
            }
        });

    });
</script>